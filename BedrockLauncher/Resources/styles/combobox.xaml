<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:c="clr-namespace:BedrockLauncher.Components"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <c:InteractivityTemplate x:Key="ComboBoxItem_NoScrollBehavior">
        <c:InteractivityItems>
            <c:InteractivityItems.Triggers>
                <i:EventTrigger EventName="RequestBringIntoView">
                    <i:InvokeCommandAction PassEventArgsToCommand="True" Command="{x:Static c:ComboBoxBehaviors.ComboBox_RequestBringIntoView}"/>
                </i:EventTrigger>
            </c:InteractivityItems.Triggers>
        </c:InteractivityItems>
    </c:InteractivityTemplate>

    <c:InteractivityTemplate x:Key="ComboBox_NoScrollBehavior">
        <c:InteractivityItems>
            <c:InteractivityItems.Triggers>
                <i:EventTrigger EventName="PreviewMouseWheel">
                    <i:InvokeCommandAction Command="{x:Static c:ComboBoxBehaviors.ComboBox_PreviewMouseWheel}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <i:InvokeCommandAction Command="{x:Static c:ComboBoxBehaviors.ComboBox_ForgetNavigation}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </c:InteractivityItems.Triggers>
        </c:InteractivityItems>
    </c:InteractivityTemplate>

    <Style x:Key="ScrollBarThumbVertical_Combobox" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" CornerRadius="2" Background="{DynamicResource ScrollBar_Combobox.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{DynamicResource ScrollBar_Combobox.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{DynamicResource ScrollBar_Combobox.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarThumbHorizontal_Combobox" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" CornerRadius="2" Background="{DynamicResource ScrollBar_Combobox.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{DynamicResource ScrollBar_Combobox.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{DynamicResource ScrollBar_Combobox.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBox_RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxScrollbars" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="{DynamicResource ScrollBar_Combobox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBar_Combobox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1,0"/>
        <Setter Property="Width" Value="{DynamicResource ComboBox_VerticalScrollBarWidthKey}"/>
        <Setter Property="MinWidth" Value="{DynamicResource ComboBox_VerticalScrollBarWidthKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="0"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="0"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{DynamicResource ComboBox_RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{DynamicResource ComboBox_RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBarThumbVertical_Combobox}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource ComboBox_HorizontalScrollBarHeightKey}"/>
                <Setter Property="MinHeight" Value="{DynamicResource ComboBox_HorizontalScrollBarHeightKey}"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="0"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="0"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{DynamicResource ComboBox_RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{DynamicResource ComboBox_RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumbHorizontal_Combobox}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource ScrollBar.Static.Background}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{DynamicResource ComboBoxScrollbars}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{DynamicResource ComboBoxScrollbars}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3"></Setter>
        <Setter Property="Padding" Value="0,7"></Setter>
        <Setter Property="Margin" Value="0,4,0,0"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Background" Value="{DynamicResource ComboBox.Dropdown.Static.Background}"/>
    </Style>
    <Style x:Key="DropDownPartPopupStyle" TargetType="{x:Type Popup}">
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="Grid.ColumnSpan" Value="2"></Setter>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Placement" Value="Bottom"></Setter>
    </Style>
    <Style x:Key="DropDownCanvasStyle" TargetType="{x:Type Canvas}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="0"/>
    </Style>
    <Style x:Key="DropDownGridAStyle" TargetType="{x:Type Grid}">
        <Setter Property="MaxHeight" Value="295"/>
    </Style>
    <Style x:Key="DropDownGridBStyle" TargetType="{x:Type Grid}">
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    </Style>
    <Style x:Key="DropDownItemPresenterStyle" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained"/>
    </Style>
    <Style x:Key="DropDownContentPresenterStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>
    <Style x:Key="DropDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="Template" Value="{DynamicResource GenericComboBoxToggleButtonTemplate}"/>
    </Style>

    <ControlTemplate x:Key="GenericComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" Style="{DynamicResource DropDownPartPopupStyle}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Style="{DynamicResource DropDownGridAStyle}" MinWidth="{Binding ActualWidth, ElementName=TemplateRoot}">
                    <Border x:Name="DropDownBorder" Style="{DynamicResource DropDownBorderStyle}">
                        <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ComboBoxScrollViewer}">
                            <Grid x:Name="Grid" Style="{DynamicResource DropDownGridBStyle}">
                                <Canvas x:Name="Canvas" Style="{DynamicResource DropDownCanvasStyle}">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" Style="{DynamicResource DropDownItemPresenterStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton x:Name="toggleButton" Style="{DynamicResource DropDownToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="contentPresenter" Style="{DynamicResource DropDownContentPresenterStyle}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="51"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GenericComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" Style="{DynamicResource DropDownPartPopupStyle}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Style="{DynamicResource DropDownGridAStyle}" MinWidth="{Binding ActualWidth, ElementName=TemplateRoot}">
                    <Border x:Name="DropDownBorder" Style="{DynamicResource DropDownBorderStyle}">
                        <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ComboBoxScrollViewer}">
                            <Grid x:Name="Grid" Style="{DynamicResource DropDownGridBStyle}">
                                <Canvas x:Name="Canvas" Style="{DynamicResource DropDownCanvasStyle}">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" Style="{DynamicResource DropDownItemPresenterStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <Border Grid.ColumnSpan="2" Background="#FF131313" CornerRadius="4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="25"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource DropDownToggleButtonStyle}"/>
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="51"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GenericComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Style x:Key="TemplateRootStyle" TargetType="{x:Type Border}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Padding" Value="1"/>
            </Style>
            <Style x:Key="SplitBorderStyle" TargetType="{x:Type Border}">
               <Setter Property="Width" Value="20"/>
               <Setter Property="SnapsToDevicePixels" Value="true"/>
               <Setter Property="Margin" Value="0,0,0,0"/>
               <Setter Property="HorizontalAlignment" Value="Right"/>
               <Setter Property="BorderThickness" Value="1"/>
               <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>
            <Style x:Key="ArrowStyle" TargetType="{x:Type Path}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Fill" Value="{DynamicResource ComboBox.Static.Glyph}"/>
                <Setter Property="Data" Value="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
            </Style>
        </ControlTemplate.Resources>
        <Border x:Name="templateRoot" Style="{DynamicResource TemplateRootStyle}" Background="{DynamicResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource ComboBox.Static.Border}">
            <Border x:Name="splitBorder" Style="{DynamicResource SplitBorderStyle}">
                <Path x:Name="arrow" Style="{DynamicResource ArrowStyle}"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Focused.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Focused.Border}"/>
                    <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Focused.Background}"/>
                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Focused.Background}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Focused.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Focused.Border}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                    <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Border}"/>
                <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ComboBox.MouseOver.Glyph}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="GenericComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="13,5,0,5"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource BlankFocusVisual}"/>
        <Setter Property="c:InteractivityItems.Template" Value="{DynamicResource ComboBoxItem_NoScrollBehavior}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GenericComboBoxItemStyle_NoLeftPadding" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0,5,0,5"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="c:InteractivityItems.Template" Value="{DynamicResource ComboBoxItem_NoScrollBehavior}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.Selected.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GenericComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="0" RadiusX="4" RadiusY="4" SnapsToDevicePixels="true" Stroke="{DynamicResource OveralElements.Background}" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText.Foreground}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource GenericComboBoxItemStyle}"/>
        <Setter Property="FontFamily" Value="BedrockLauncher;component/#Noto Sans"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource GenericComboBoxTemplate}"/>
        <Setter Property="c:InteractivityItems.Template" Value="{DynamicResource ComboBox_NoScrollBehavior}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{DynamicResource GenericComboBoxEditableTemplate}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InstallationSelectorComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource GenericComboBoxStyle}">
        <Style.Resources>
            <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#262626"/>
            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#262626"/>
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#3C3C3C"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#3C3C3C"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="ComboBox.Focused.Background" Color="#3C3C3C"/>
            <SolidColorBrush x:Key="ComboBox.Focused.Border" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Focused.Glyph" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#313131"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#313131"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="ComboBoxItem.Selected.Background" Color="#FF008542"/>
            <SolidColorBrush x:Key="ComboBoxItem.Selected.Border" Color="#FF008542"/>

            <SolidColorBrush x:Key="ScrollBar_Combobox.Static.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ScrollBar_Combobox.Static.Border" Color="Transparent"/>

            <SolidColorBrush x:Key="ScrollBar_Combobox.MouseOver.Thumb" Color="#A6A6A6"/>
            <SolidColorBrush x:Key="ScrollBar_Combobox.Pressed.Thumb" Color="#606060"/>
            <SolidColorBrush x:Key="ScrollBar_Combobox.Static.Thumb" Color="#FF5D5D5D"/>

            <SolidColorBrush x:Key="ComboBox.Dropdown.Static.Background" Color="#FF131313"/>

            <Style x:Key="DropDownPartPopupStyle" TargetType="{x:Type Popup}">
                <Setter Property="AllowsTransparency" Value="True"></Setter>
                <Setter Property="Grid.ColumnSpan" Value="2"></Setter>
                <Setter Property="Margin" Value="1"></Setter>
                <Setter Property="Placement" Value="Top"></Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>